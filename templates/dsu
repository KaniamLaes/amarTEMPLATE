typedef pair<int, int> pi;

struct DSU
{
  vector<int> parent, rank;

  DSU(int n)
  {
    parent.resize(n,-1);
    rank.resize(n,-1);
    for (int i = 0; i < n; i++)
    {
      parent[i] = i;
      rank[i] = 0;
    }
  }

  int find_set(int v)
  {
    if (v == parent[v])
      return v;
    return parent[v] = find_set(parent[v]);
  }

  void union_sets(int a, int b)
  {
    a = find_set(a);
    b = find_set(b);
    if (a != b)
    {
      if (rank[a] < rank[b])
        swap(a, b);
      parent[b] = a;
      if (rank[a] == rank[b])
        rank[a]++;
    }
  }
};
